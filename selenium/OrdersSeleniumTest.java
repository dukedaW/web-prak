// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class OrdersSeleniumTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void ordersSelenium() {
    driver.get("http://localhost:8080/");
    driver.manage().window().setSize(new Dimension(1200, 954));
    driver.findElement(By.id("deliveriesLink")).click();
    driver.findElement(By.id("addOrderButton")).click();
    driver.findElement(By.id("orderId")).click();
    driver.findElement(By.id("orderId")).sendKeys("120");
    driver.findElement(By.id("orderDateTime")).click();
    driver.findElement(By.id("orderDateTime")).sendKeys("2023-09-20");
    driver.findElement(By.id("orderBuyerName")).click();
    driver.findElement(By.id("orderBuyerName")).sendKeys("A potato consumer");
    driver.findElement(By.id("orderProductName")).click();
    driver.findElement(By.id("orderProductName")).sendKeys("Potatoes");
    driver.findElement(By.id("orderAmount")).click();
    driver.findElement(By.id("orderAmount")).sendKeys("31");
    driver.findElement(By.id("orderDeparted")).click();
    driver.findElement(By.id("submitButton")).click();
    driver.findElement(By.id("deliveriesLink")).click();
    driver.findElement(By.cssSelector("tr:nth-child(5) a > span")).click();
    assertThat(driver.findElement(By.cssSelector("p:nth-child(2)")).getText(), is("Имя покупателя: A potato consumer"));
    assertThat(driver.findElement(By.cssSelector("p:nth-child(4)")).getText(), is("Кол-во: 31.0"));
    assertThat(driver.findElement(By.cssSelector("h4")).getText(), is("2023-09-20 00:00:00.0"));
    driver.findElement(By.id("editButton")).click();
    driver.findElement(By.id("orderAmount")).click();
    driver.findElement(By.id("orderAmount")).sendKeys("32.0");
    driver.findElement(By.id("orderDateTime")).click();
    driver.findElement(By.id("orderDateTime")).sendKeys("2023-09-20");
    driver.findElement(By.cssSelector("form")).click();
    driver.findElement(By.id("submitButton")).click();
    driver.findElement(By.id("deliveriesLink")).click();
    driver.findElement(By.cssSelector("tr:nth-child(5) a > span")).click();
    assertThat(driver.findElement(By.cssSelector("h4")).getText(), is("2023-09-20 00:00:00.0"));
    assertThat(driver.findElement(By.cssSelector("p:nth-child(4)")).getText(), is("Кол-во: 32.0"));
    driver.findElement(By.id("deleteButton")).click();
    driver.findElement(By.name("dateLo")).click();
    driver.findElement(By.name("dateLo")).sendKeys("2023-09-01");
    driver.findElement(By.name("dateHi")).click();
    driver.findElement(By.name("dateHi")).sendKeys("2023-09-30");
    driver.findElement(By.name("amountLo")).click();
    driver.findElement(By.name("amountLo")).sendKeys("1");
    driver.findElement(By.name("amountHi")).click();
    driver.findElement(By.name("amountHi")).sendKeys("100");
    driver.findElement(By.cssSelector(".col > .btn")).click();
    {
      List<WebElement> elements = driver.findElements(By.linkText("Необходимо добавить"));
      assert(elements.size() > 0);
    }
  }
}
