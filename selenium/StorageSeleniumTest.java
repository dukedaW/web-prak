// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class StorageSeleniumTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void storageSelenium() {
    driver.get("http://localhost:8080/");
    driver.manage().window().setSize(new Dimension(1728, 1080));
    driver.findElement(By.id("storageLink")).click();
    driver.findElement(By.id("addStorageButton")).click();
    driver.findElement(By.id("storageId")).click();
    driver.findElement(By.id("storageId")).sendKeys("111");
    driver.findElement(By.id("storageType")).click();
    driver.findElement(By.id("storageType")).sendKeys("parking lot");
    driver.findElement(By.id("storageFreeSpace")).click();
    driver.findElement(By.id("storageFreeSpace")).sendKeys("100");
    driver.findElement(By.id("submitButton")).click();
    driver.findElement(By.id("storageLink")).click();
    driver.findElement(By.cssSelector("tr:nth-child(4) a > span")).click();
    assertThat(driver.findElement(By.cssSelector("p:nth-child(2)")).getText(), is("Тип хранилища: parking lot"));
    assertThat(driver.findElement(By.cssSelector("p:nth-child(3)")).getText(), is("Свободное место: 100"));
    driver.findElement(By.id("editButton")).click();
    driver.findElement(By.id("storageFreeSpace")).click();
    driver.findElement(By.id("storageFreeSpace")).sendKeys("99");
    driver.findElement(By.id("storageType")).click();
    driver.findElement(By.id("storageType")).sendKeys("parking space");
    driver.findElement(By.cssSelector("html")).click();
    driver.findElement(By.id("submitButton")).click();
    driver.findElement(By.id("storageLink")).click();
    driver.findElement(By.cssSelector("tr:nth-child(4) a > span")).click();
    assertThat(driver.findElement(By.cssSelector("p:nth-child(2)")).getText(), is("Тип хранилища: parking space"));
    assertThat(driver.findElement(By.cssSelector("p:nth-child(3)")).getText(), is("Свободное место: 99"));
    driver.findElement(By.id("deleteButton")).click();
    driver.findElement(By.name("storageType")).click();
    driver.findElement(By.name("storageType")).sendKeys("parking lot");
    driver.findElement(By.name("storageSpaceLo")).click();
    driver.findElement(By.name("storageSpaceLo")).sendKeys("99");
    driver.findElement(By.cssSelector(".col > .btn")).click();
    {
      List<WebElement> elements = driver.findElements(By.linkText("Необходимо добавить"));
      assert(elements.size() > 0);
    }
  }
}
